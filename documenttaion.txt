frontend : structure and designing of website
Ex. Html css,bootstrap,Javascript,Tailwind Css, React, Angular, Material UI, Chakra UI,Django

backend : functionality or interactive
Ex: php, python,nodeJs, laravel,java

database: store data for the website
Ex. MYSQl, firebase, mongodb

Mysql   :   structured query language
mongodb:  not structured

Static website vs dynamic website

static: content does not change
dynamic: can change

html css: can only make static website

HTML (Hypertext Markup Language)
for website structure

hypertext: text within text
markup language:  for formatted text

CSS (Cascading style sheet)
for styling

Javascript:
interaction

HTML

head:
	title,script,style,link,meta

tag vs element
element: starting tag - content -closing tag
heading tag:h1-h6
paragraph p,
pre

block element vs inline element

attribute: written inside starting tag

span: to style a specific part of the text

list types:
	ordered list:
	unordered list:
	descriptive list:


css styling

inline:  1
internal:2  
external: 3

selector:
	id (#) unique  1
	class (.) multiple 2
	tag (tagname) 3
	group (tagname, class,id) 4
	universal (*) 5



github.com/mukund-2114


text-properties:
 	font: Times New Roman
	tranform:uppercase,lowercase,capitalize
	decoration: overline,underline,line-through

div: width ,height

display : inline, block;
letter spacing;
background-image
background-size: contain,cover,100% 100%

box model:
	margin:spacing outside the content
	padding: spacing inside the content
	border: for content border
border radius

float property:
opacity
cursor

position:
	relative: 
	absolute : 
	fixed
z-index

display:flex;

justify content- for horitzontal axis-> center,space-around,-space-between,flex-end
align-item: for vertical axis: center

media query: max-width:<=
                       min-width:>=


only float

1200: 6
800: 3
500:1



Bootstrap: 4.6

Html css, javascript framework
design UI
use classes
container-fluid: 100%
container-80%

background-color:
primary,secondary,light,dark,success,warning,danger
info

text: lowercase,uppercase,capatilize
align: center,left,right
border
rounded
width,height: 25,50,75,100
margin,padding: 0,1,2,3,4,5

alerts
badges
buttons


Grid system:

12

row, columns
col-(1-12)

12 = 12/12 = 1
12 = 12/4 = 3
even
12/5

min-width
xl
lg
md
sm


4 lg  col-3
2 md col-6
1  sm col-12




















